apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.1.1
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http-grafana
          protocol: TCP

        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /robots.txt
            port: 3000
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 2

        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3000
          timeoutSeconds: 1

        resources:
          limits:
            memory: "1Gi"
            cpu: "1000m"
          requests:
            memory: 500M
            cpu: "500m"


        volumeMounts:
        # Main config, grafana.ini, datasource.yaml, dashboards.yaml
        - mountPath: /var/lib/grafana
          name: grafana-pv
        - mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
          name: grafana-cfg-pv
          subPath: datasources.yaml
        - mountPath: /etc/grafana/grafana.ini
          name: grafana-cfg-pv
          subPath: grafana.ini
        - mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
          name: grafana-cfg-pv
          subPath: dashboards.yaml

        # dashboard config map 
        - mountPath: /var/lib/grafana/dashboards/k8s-global.json
          name: grafana-dashboard-k8s-global-pv
          subPath: k8s-global.json
        - mountPath: /var/lib/grafana/dashboards/k8s-namespace.json
          name: grafana-dashboard-k8s-namespace-pv
          subPath: k8s-namespace.json
        - mountPath: /var/lib/grafana/dashboards/k8s-pods.json
          name: grafana-dashboard-k8s-pods-pv
          subPath: k8s-pods.json
        - mountPath: /var/lib/grafana/dashboards/argocd.json
          name: grafana-dashboard-argocd-pv
          subPath: argocd.json
        - mountPath: /var/lib/grafana/dashboards/nginx-ingress.json
          name: grafana-dashboard-nginx-ingress-pv
          subPath: nginx-ingress.json
        - mountPath: /var/lib/grafana/dashboards/calico.json
          name: grafana-dashboard-calico-pv
          subPath: calico.json
        - mountPath: /var/lib/grafana/dashboards/loki.json
          name: grafana-dashboard-loki
          subPath: loki.json
        - mountPath: /var/lib/grafana/dashboards/nodeexporter.json
          name: grafana-dashboard-nodeexporter
          subPath: nodeexporter.json

      volumes:
      - name: grafana-pv
        persistentVolumeClaim:
          claimName: grafana-pvc
      - name: grafana-cfg-pv
        configMap:
          name: grafana-cfg

      #dashboards volume
      - name: grafana-dashboard-k8s-global-pv
        configMap:
          name: grafana-dashboard-k8s-global
      - name: grafana-dashboard-k8s-namespace-pv
        configMap:
          name: grafana-dashboard-k8s-namespace
      - name: grafana-dashboard-k8s-pods-pv
        configMap:
          name: grafana-dashboard-k8s-pods
      - name: grafana-dashboard-argocd-pv
        configMap:
          name: grafana-dashboard-argocd
      - name: grafana-dashboard-nginx-ingress-pv
        configMap:
          name: grafana-dashboard-nginx-ingress
      - name: grafana-dashboard-calico-pv
        configMap:
          name: grafana-dashboard-calico
      - name: grafana-dashboard-loki
        configMap:
          name: grafana-dashboard-loki
      - name: grafana-dashboard-nodeexporter
        configMap:
          name: grafana-dashboard-nodeexporter





---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana-service
    jobLabel: grafana
spec:
  ports:
  - name: http-grafana
    port: 3000
    protocol: TCP
    targetPort: http-grafana
  selector:
    app: grafana


